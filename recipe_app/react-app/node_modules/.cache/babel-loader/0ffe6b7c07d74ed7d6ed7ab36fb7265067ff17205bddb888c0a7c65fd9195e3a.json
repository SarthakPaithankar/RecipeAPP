{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakpaithankar/Recipe/recipe_app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pgp = require('pg-promise')();\nconst dbConfig = {\n  host: process.env.POSTGRES_HOST,\n  port: process.env.POSTGRES_PORT,\n  database: process.env.POSTGRES_DB,\n  user: process.env.POSTGRES_USER,\n  password: process.env.POSTGRES_PASSWORD\n};\nconst db = pgp(dbConfig);\ndb.connect().then(obj => {\n  console.log(\"Database Connected successfully\");\n  obj.done();\n}).catch(error => {\n  console.log(\"Error: \", error.message || error);\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","pgp","require","dbConfig","host","process","env","POSTGRES_HOST","port","POSTGRES_PORT","database","POSTGRES_DB","user","POSTGRES_USER","password","POSTGRES_PASSWORD","db","connect","then","obj","console","log","done","catch","error","message","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/sarthakpaithankar/Recipe/recipe_app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst pgp = require('pg-promise')();\n\nconst dbConfig = {\n    host: process.env.POSTGRES_HOST,\n    port: process.env.POSTGRES_PORT,\n    database: process.env.POSTGRES_DB,\n    user: process.env.POSTGRES_USER,\n    password: process.env.POSTGRES_PASSWORD\n}\n\nconst db = pgp(dbConfig);\n\ndb.connect()\n    .then(obj =>{\n        console.log(\"Database Connected successfully\");\n        obj.done();\n    })\n    .catch(error =>{\n        console.log(\"Error: \", error.message || error)\n    });\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,GAAG,GAAGC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;AAEnC,MAAMC,QAAQ,GAAG;EACbC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,aAAa;EAC/BC,IAAI,EAAEH,OAAO,CAACC,GAAG,CAACG,aAAa;EAC/BC,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK,WAAW;EACjCC,IAAI,EAAEP,OAAO,CAACC,GAAG,CAACO,aAAa;EAC/BC,QAAQ,EAAET,OAAO,CAACC,GAAG,CAACS;AAC1B,CAAC;AAED,MAAMC,EAAE,GAAGf,GAAG,CAACE,QAAQ,CAAC;AAExBa,EAAE,CAACC,OAAO,CAAC,CAAC,CACPC,IAAI,CAACC,GAAG,IAAG;EACRC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAC9CF,GAAG,CAACG,IAAI,CAAC,CAAC;AACd,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAG;EACXJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEG,KAAK,CAACC,OAAO,IAAID,KAAK,CAAC;AAClD,CAAC,CAAC;AAEN,MAAME,IAAI,GAAG9B,QAAQ,CAAC+B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACT9B,OAAA,CAACL,KAAK,CAACoC,UAAU;EAAAC,QAAA,eACfhC,OAAA,CAACH,GAAG;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACAtC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}