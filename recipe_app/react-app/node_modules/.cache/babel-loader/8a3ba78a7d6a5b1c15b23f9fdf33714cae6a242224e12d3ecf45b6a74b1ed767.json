{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\n\nconst {\n  Column\n} = require(`./column`);\nconst {\n  ColumnSet\n} = require(`./column-set`);\nconst {\n  TableName\n} = require(`./table-name`);\nconst method = require(`./methods`);\nconst utils = require(`../utils`);\n\n/**\r\n * @namespace helpers\r\n * @description\r\n * Namespace for query-formatting generators, available as {@link module:pg-promise~helpers pgp.helpers}, after initializing the library.\r\n *\r\n * It unifies the approach to generating multi-row `INSERT` / `UPDATE` queries with the single-row ones.\r\n *\r\n * See also: $[Performance Boost].\r\n *\r\n * @property {function} TableName\r\n * {@link helpers.TableName TableName} class constructor.\r\n *\r\n * @property {function} ColumnSet\r\n * {@link helpers.ColumnSet ColumnSet} class constructor.\r\n *\r\n * @property {function} Column\r\n * {@link helpers.Column Column} class constructor.\r\n *\r\n * @property {function} insert\r\n * {@link helpers.insert insert} static method.\r\n *\r\n * @property {function} update\r\n * {@link helpers.update update} static method.\r\n *\r\n * @property {function} values\r\n * {@link helpers.values values} static method.\r\n *\r\n * @property {function} sets\r\n * {@link helpers.sets sets} static method.\r\n *\r\n * @property {function} concat\r\n * {@link helpers.concat concat} static method.\r\n */\nmodule.exports = config => {\n  const capSQL = () => config.options && config.options.capSQL;\n  const res = {\n    insert(data, columns, table) {\n      return method.insert(data, columns, table, capSQL());\n    },\n    update(data, columns, table, options) {\n      return method.update(data, columns, table, options, capSQL());\n    },\n    concat(queries) {\n      return method.concat(queries, capSQL());\n    },\n    values(data, columns) {\n      return method.values(data, columns, capSQL());\n    },\n    sets(data, columns) {\n      return method.sets(data, columns, capSQL());\n    },\n    TableName,\n    ColumnSet,\n    Column\n  };\n  utils.lock(res, true, config.options);\n  return res;\n};","map":{"version":3,"names":["Column","require","ColumnSet","TableName","method","utils","module","exports","config","capSQL","options","res","insert","data","columns","table","update","concat","queries","values","sets","lock"],"sources":["/Users/sarthakpaithankar/Recipe/recipe_app/node_modules/pg-promise/lib/helpers/index.js"],"sourcesContent":["/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst {Column} = require(`./column`);\r\nconst {ColumnSet} = require(`./column-set`);\r\nconst {TableName} = require(`./table-name`);\r\nconst method = require(`./methods`);\r\nconst utils = require(`../utils`);\r\n\r\n/**\r\n * @namespace helpers\r\n * @description\r\n * Namespace for query-formatting generators, available as {@link module:pg-promise~helpers pgp.helpers}, after initializing the library.\r\n *\r\n * It unifies the approach to generating multi-row `INSERT` / `UPDATE` queries with the single-row ones.\r\n *\r\n * See also: $[Performance Boost].\r\n *\r\n * @property {function} TableName\r\n * {@link helpers.TableName TableName} class constructor.\r\n *\r\n * @property {function} ColumnSet\r\n * {@link helpers.ColumnSet ColumnSet} class constructor.\r\n *\r\n * @property {function} Column\r\n * {@link helpers.Column Column} class constructor.\r\n *\r\n * @property {function} insert\r\n * {@link helpers.insert insert} static method.\r\n *\r\n * @property {function} update\r\n * {@link helpers.update update} static method.\r\n *\r\n * @property {function} values\r\n * {@link helpers.values values} static method.\r\n *\r\n * @property {function} sets\r\n * {@link helpers.sets sets} static method.\r\n *\r\n * @property {function} concat\r\n * {@link helpers.concat concat} static method.\r\n */\r\nmodule.exports = config => {\r\n    const capSQL = () => config.options && config.options.capSQL;\r\n    const res = {\r\n        insert(data, columns, table) {\r\n            return method.insert(data, columns, table, capSQL());\r\n        },\r\n        update(data, columns, table, options) {\r\n            return method.update(data, columns, table, options, capSQL());\r\n        },\r\n        concat(queries) {\r\n            return method.concat(queries, capSQL());\r\n        },\r\n        values(data, columns) {\r\n            return method.values(data, columns, capSQL());\r\n        },\r\n        sets(data, columns) {\r\n            return method.sets(data, columns, capSQL());\r\n        },\r\n        TableName,\r\n        ColumnSet,\r\n        Column\r\n    };\r\n    utils.lock(res, true, config.options);\r\n    return res;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAACA;AAAM,CAAC,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAM;EAACC;AAAS,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC3C,MAAM;EAACE;AAAS,CAAC,GAAGF,OAAO,CAAC,cAAc,CAAC;AAC3C,MAAMG,MAAM,GAAGH,OAAO,CAAC,WAAW,CAAC;AACnC,MAAMI,KAAK,GAAGJ,OAAO,CAAC,UAAU,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAK,MAAM,CAACC,OAAO,GAAGC,MAAM,IAAI;EACvB,MAAMC,MAAM,GAAGA,CAAA,KAAMD,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACE,OAAO,CAACD,MAAM;EAC5D,MAAME,GAAG,GAAG;IACRC,MAAMA,CAACC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAE;MACzB,OAAOX,MAAM,CAACQ,MAAM,CAACC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEN,MAAM,CAAC,CAAC,CAAC;IACxD,CAAC;IACDO,MAAMA,CAACH,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEL,OAAO,EAAE;MAClC,OAAON,MAAM,CAACY,MAAM,CAACH,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEL,OAAO,EAAED,MAAM,CAAC,CAAC,CAAC;IACjE,CAAC;IACDQ,MAAMA,CAACC,OAAO,EAAE;MACZ,OAAOd,MAAM,CAACa,MAAM,CAACC,OAAO,EAAET,MAAM,CAAC,CAAC,CAAC;IAC3C,CAAC;IACDU,MAAMA,CAACN,IAAI,EAAEC,OAAO,EAAE;MAClB,OAAOV,MAAM,CAACe,MAAM,CAACN,IAAI,EAAEC,OAAO,EAAEL,MAAM,CAAC,CAAC,CAAC;IACjD,CAAC;IACDW,IAAIA,CAACP,IAAI,EAAEC,OAAO,EAAE;MAChB,OAAOV,MAAM,CAACgB,IAAI,CAACP,IAAI,EAAEC,OAAO,EAAEL,MAAM,CAAC,CAAC,CAAC;IAC/C,CAAC;IACDN,SAAS;IACTD,SAAS;IACTF;EACJ,CAAC;EACDK,KAAK,CAACgB,IAAI,CAACV,GAAG,EAAE,IAAI,EAAEH,MAAM,CAACE,OAAO,CAAC;EACrC,OAAOC,GAAG;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}