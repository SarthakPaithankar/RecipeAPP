{"ast":null,"code":"/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\n\nconst npm = {\n  path: require(`path`),\n  util: require(`util`),\n  patterns: require(`../patterns`),\n  os: require(`os`)\n};\n\n////////////////////////////////////////////\n// Simpler check for null/undefined;\nfunction isNull(value) {\n  return value === null || value === undefined;\n}\n\n////////////////////////////////////////////////////////\n// Verifies parameter for being a non-empty text string;\nfunction isText(txt) {\n  return txt && typeof txt === `string` && /\\S/.test(txt);\n}\n\n///////////////////////////////////////////////////////////\n// Approximates the environment as being for development.\n//\n// Proper configuration is having NODE_ENV = 'development', but this\n// method only checks for 'dev' being present, and regardless of the case.\nfunction isDev() {\n  const env = global.process.env.NODE_ENV || ``;\n  return env.toLowerCase().indexOf(`dev`) !== -1;\n}\n\n///////////////////////////////////////////////////\n// Locks all properties in an object to read-only,\n// or freezes the entire object for any changes.\nfunction lock(obj, freeze, options) {\n  if (options && options.noLocking) {\n    return;\n  }\n  if (freeze) {\n    Object.freeze(obj); // freeze the entire object, permanently;\n  } else {\n    const desc = {\n      writable: false,\n      configurable: false,\n      enumerable: true\n    };\n    for (const p in obj) {\n      Object.defineProperty(obj, p, desc);\n    }\n  }\n}\n\n/////////////////////////////////////////////\n// Adds properties from source to the target,\n// making them read-only and enumerable.\nfunction addReadProperties(target, source) {\n  for (const p in source) {\n    addReadProp(target, p, source[p]);\n  }\n}\n\n///////////////////////////////////////////////////////\n// Adds a read-only, non-deletable enumerable property.\nfunction addReadProp(obj, name, value, hidden) {\n  Object.defineProperty(obj, name, {\n    value,\n    configurable: false,\n    enumerable: !hidden,\n    writable: false\n  });\n}\n\n//////////////////////////////////////////////////////////////\n// Converts a connection string or object into its safe copy:\n// if password is present, it is masked with symbol '#'.\nfunction getSafeConnection(cn) {\n  const maskPassword = cs => cs.replace(/:(?![/])([^@]+)/, (_, m) => `:` + new Array(m.length + 1).join(`#`));\n  if (typeof cn === `object`) {\n    const copy = Object.assign({}, cn);\n    if (typeof copy.password === `string`) {\n      copy.password = copy.password.replace(/./g, `#`);\n    }\n    if (typeof copy.connectionString === `string`) {\n      copy.connectionString = maskPassword(copy.connectionString);\n    }\n    return copy;\n  }\n  return maskPassword(cn);\n}\n\n///////////////////////////////////////////\n// Returns a space gap for console output;\nfunction messageGap(level) {\n  return ` `.repeat(level * 4);\n}\n\n/////////////////////////////////////////\n// Provides platform-neutral inheritance;\nfunction inherits(child, parent) {\n  child.prototype.__proto__ = parent.prototype;\n}\n\n// istanbul ignore next\nfunction getLocalStack(startIdx, maxLines) {\n  // from the call stack, we take up to maximum lines,\n  // starting with specified line index:\n  startIdx = startIdx || 0;\n  const endIdx = maxLines > 0 ? startIdx + maxLines : undefined;\n  return new Error().stack.split(`\\n`).filter(line => line.match(/\\(.+\\)/)).slice(startIdx, endIdx).join(`\\n`);\n}\n\n//////////////////////////////\n// Internal error container;\nfunction InternalError(error) {\n  this.error = error;\n}\n\n/////////////////////////////////////////////////////////////////\n// Parses a property name, and gets its name from the object,\n// if the property exists. Returns object {valid, has, target, value}:\n//  - valid - true/false, whether the syntax is valid\n//  - has - a flag that property exists; set when 'valid' = true\n//  - target - the target object that contains the property; set when 'has' = true\n//  - value - the value; set when 'has' = true\nfunction getIfHas(obj, prop) {\n  const result = {\n    valid: true\n  };\n  if (prop.indexOf(`.`) === -1) {\n    result.has = prop in obj;\n    result.target = obj;\n    if (result.has) {\n      result.value = obj[prop];\n    }\n  } else {\n    const names = prop.split(`.`);\n    let missing, target;\n    for (let i = 0; i < names.length; i++) {\n      const n = names[i];\n      if (!n) {\n        result.valid = false;\n        return result;\n      }\n      if (!missing && hasProperty(obj, n)) {\n        target = obj;\n        obj = obj[n];\n      } else {\n        missing = true;\n      }\n    }\n    result.has = !missing;\n    if (result.has) {\n      result.target = target;\n      result.value = obj;\n    }\n  }\n  return result;\n}\n\n/////////////////////////////////////////////////////////////////////////\n// Checks if the property exists in the object or value or its prototype;\nfunction hasProperty(value, prop) {\n  return value && typeof value === `object` && prop in value || value !== null && value !== undefined && value[prop] !== undefined;\n}\n\n////////////////////////////////////////////////////////\n// Adds prototype inspection\nfunction addInspection(type, cb) {\n  type.prototype[npm.util.inspect.custom] = cb;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////\n// Identifies a general connectivity error, after which no more queries can be executed.\n// This is for detecting when to skip executing ROLLBACK for a failed transaction.\nfunction isConnectivityError(err) {\n  const code = err && typeof err.code === `string` && err.code;\n  const cls = code && code.substr(0, 2); // Error Class\n  // istanbul ignore next (we cannot test-cover all error cases):\n  return code === `ECONNRESET` || cls === `08` && code !== `08P01` || cls === `57` && code !== `57014`;\n  // Code 'ECONNRESET' - Connectivity issue handled by the driver.\n  // Class 08 - Connection Exception (except for 08P01, for protocol violation).\n  // Class 57 - Operator Intervention (except for 57014, for cancelled queries).\n  //\n  // ERROR CODES: https://www.postgresql.org/docs/9.6/static/errcodes-appendix.html\n}\n\n///////////////////////////////////////////////////////////////\n// Does JSON.stringify, with support for BigInt (irreversible)\nfunction toJson(data) {\n  if (data !== undefined) {\n    return JSON.stringify(data, (_, v) => typeof v === `bigint` ? `${v}#bigint` : v).replace(/\"(-?\\d+)#bigint\"/g, (_, a) => a);\n  }\n}\nconst platform = npm.os.platform();\nconst exp = {\n  toJson,\n  getIfHas,\n  addInspection,\n  InternalError,\n  getLocalStack,\n  lock,\n  isText,\n  isNull,\n  isDev,\n  platform: {\n    isWindows: platform === `win32`,\n    isMac: platform === `darwin`\n  },\n  addReadProp,\n  addReadProperties,\n  getSafeConnection,\n  messageGap,\n  inherits,\n  isConnectivityError\n};\nconst mainFile = process.argv[1];\n\n// istanbul ignore next\nexp.startDir = mainFile ? npm.path.dirname(mainFile) : process.cwd();\nmodule.exports = exp;","map":{"version":3,"names":["npm","path","require","util","patterns","os","isNull","value","undefined","isText","txt","test","isDev","env","global","process","NODE_ENV","toLowerCase","indexOf","lock","obj","freeze","options","noLocking","Object","desc","writable","configurable","enumerable","p","defineProperty","addReadProperties","target","source","addReadProp","name","hidden","getSafeConnection","cn","maskPassword","cs","replace","_","m","Array","length","join","copy","assign","password","connectionString","messageGap","level","repeat","inherits","child","parent","prototype","__proto__","getLocalStack","startIdx","maxLines","endIdx","Error","stack","split","filter","line","match","slice","InternalError","error","getIfHas","prop","result","valid","has","names","missing","i","n","hasProperty","addInspection","type","cb","inspect","custom","isConnectivityError","err","code","cls","substr","toJson","data","JSON","stringify","v","a","platform","exp","isWindows","isMac","mainFile","argv","startDir","dirname","cwd","module","exports"],"sources":["/Users/sarthakpaithankar/Recipe/recipe_app/node_modules/pg-promise/lib/utils/index.js"],"sourcesContent":["/*\r\n * Copyright (c) 2015-present, Vitaly Tomilov\r\n *\r\n * See the LICENSE file at the top-level directory of this distribution\r\n * for licensing information.\r\n *\r\n * Removal or modification of this copyright notice is prohibited.\r\n */\r\n\r\nconst npm = {\r\n    path: require(`path`),\r\n    util: require(`util`),\r\n    patterns: require(`../patterns`),\r\n    os: require(`os`)\r\n};\r\n\r\n////////////////////////////////////////////\r\n// Simpler check for null/undefined;\r\nfunction isNull(value) {\r\n    return value === null || value === undefined;\r\n}\r\n\r\n////////////////////////////////////////////////////////\r\n// Verifies parameter for being a non-empty text string;\r\nfunction isText(txt) {\r\n    return txt && typeof txt === `string` && /\\S/.test(txt);\r\n}\r\n\r\n///////////////////////////////////////////////////////////\r\n// Approximates the environment as being for development.\r\n//\r\n// Proper configuration is having NODE_ENV = 'development', but this\r\n// method only checks for 'dev' being present, and regardless of the case.\r\nfunction isDev() {\r\n    const env = global.process.env.NODE_ENV || ``;\r\n    return env.toLowerCase().indexOf(`dev`) !== -1;\r\n}\r\n\r\n///////////////////////////////////////////////////\r\n// Locks all properties in an object to read-only,\r\n// or freezes the entire object for any changes.\r\nfunction lock(obj, freeze, options) {\r\n    if (options && options.noLocking) {\r\n        return;\r\n    }\r\n    if (freeze) {\r\n        Object.freeze(obj); // freeze the entire object, permanently;\r\n    } else {\r\n        const desc = {\r\n            writable: false,\r\n            configurable: false,\r\n            enumerable: true\r\n        };\r\n        for (const p in obj) {\r\n            Object.defineProperty(obj, p, desc);\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////////////\r\n// Adds properties from source to the target,\r\n// making them read-only and enumerable.\r\nfunction addReadProperties(target, source) {\r\n    for (const p in source) {\r\n        addReadProp(target, p, source[p]);\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////\r\n// Adds a read-only, non-deletable enumerable property.\r\nfunction addReadProp(obj, name, value, hidden) {\r\n    Object.defineProperty(obj, name, {\r\n        value,\r\n        configurable: false,\r\n        enumerable: !hidden,\r\n        writable: false\r\n    });\r\n}\r\n\r\n//////////////////////////////////////////////////////////////\r\n// Converts a connection string or object into its safe copy:\r\n// if password is present, it is masked with symbol '#'.\r\nfunction getSafeConnection(cn) {\r\n    const maskPassword = cs => cs.replace(/:(?![/])([^@]+)/, (_, m) => `:` + new Array(m.length + 1).join(`#`));\r\n    if (typeof cn === `object`) {\r\n        const copy = Object.assign({}, cn);\r\n        if (typeof copy.password === `string`) {\r\n            copy.password = copy.password.replace(/./g, `#`);\r\n        }\r\n        if (typeof copy.connectionString === `string`) {\r\n            copy.connectionString = maskPassword(copy.connectionString);\r\n        }\r\n        return copy;\r\n    }\r\n    return maskPassword(cn);\r\n}\r\n\r\n///////////////////////////////////////////\r\n// Returns a space gap for console output;\r\nfunction messageGap(level) {\r\n    return ` `.repeat(level * 4);\r\n}\r\n\r\n/////////////////////////////////////////\r\n// Provides platform-neutral inheritance;\r\nfunction inherits(child, parent) {\r\n    child.prototype.__proto__ = parent.prototype;\r\n}\r\n\r\n// istanbul ignore next\r\nfunction getLocalStack(startIdx, maxLines) {\r\n    // from the call stack, we take up to maximum lines,\r\n    // starting with specified line index:\r\n    startIdx = startIdx || 0;\r\n    const endIdx = maxLines > 0 ? startIdx + maxLines : undefined;\r\n    return new Error().stack\r\n        .split(`\\n`)\r\n        .filter(line => line.match(/\\(.+\\)/))\r\n        .slice(startIdx, endIdx)\r\n        .join(`\\n`);\r\n}\r\n\r\n//////////////////////////////\r\n// Internal error container;\r\nfunction InternalError(error) {\r\n    this.error = error;\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////\r\n// Parses a property name, and gets its name from the object,\r\n// if the property exists. Returns object {valid, has, target, value}:\r\n//  - valid - true/false, whether the syntax is valid\r\n//  - has - a flag that property exists; set when 'valid' = true\r\n//  - target - the target object that contains the property; set when 'has' = true\r\n//  - value - the value; set when 'has' = true\r\nfunction getIfHas(obj, prop) {\r\n    const result = {valid: true};\r\n    if (prop.indexOf(`.`) === -1) {\r\n        result.has = prop in obj;\r\n        result.target = obj;\r\n        if (result.has) {\r\n            result.value = obj[prop];\r\n        }\r\n    } else {\r\n        const names = prop.split(`.`);\r\n        let missing, target;\r\n        for (let i = 0; i < names.length; i++) {\r\n            const n = names[i];\r\n            if (!n) {\r\n                result.valid = false;\r\n                return result;\r\n            }\r\n            if (!missing && hasProperty(obj, n)) {\r\n                target = obj;\r\n                obj = obj[n];\r\n            } else {\r\n                missing = true;\r\n            }\r\n        }\r\n        result.has = !missing;\r\n        if (result.has) {\r\n            result.target = target;\r\n            result.value = obj;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// Checks if the property exists in the object or value or its prototype;\r\nfunction hasProperty(value, prop) {\r\n    return (value && typeof value === `object` && prop in value) ||\r\n        value !== null && value !== undefined && value[prop] !== undefined;\r\n}\r\n\r\n////////////////////////////////////////////////////////\r\n// Adds prototype inspection\r\nfunction addInspection(type, cb) {\r\n    type.prototype[npm.util.inspect.custom] = cb;\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\n// Identifies a general connectivity error, after which no more queries can be executed.\r\n// This is for detecting when to skip executing ROLLBACK for a failed transaction.\r\nfunction isConnectivityError(err) {\r\n    const code = err && typeof err.code === `string` && err.code;\r\n    const cls = code && code.substr(0, 2); // Error Class\r\n    // istanbul ignore next (we cannot test-cover all error cases):\r\n    return code === `ECONNRESET` || (cls === `08` && code !== `08P01`) || (cls === `57` && code !== `57014`);\r\n    // Code 'ECONNRESET' - Connectivity issue handled by the driver.\r\n    // Class 08 - Connection Exception (except for 08P01, for protocol violation).\r\n    // Class 57 - Operator Intervention (except for 57014, for cancelled queries).\r\n    //\r\n    // ERROR CODES: https://www.postgresql.org/docs/9.6/static/errcodes-appendix.html\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n// Does JSON.stringify, with support for BigInt (irreversible)\r\nfunction toJson(data) {\r\n    if (data !== undefined) {\r\n        return JSON.stringify(data, (_, v) => typeof v === `bigint` ? `${v}#bigint` : v)\r\n            .replace(/\"(-?\\d+)#bigint\"/g, (_, a) => a);\r\n    }\r\n}\r\n\r\nconst platform = npm.os.platform();\r\n\r\nconst exp = {\r\n    toJson,\r\n    getIfHas,\r\n    addInspection,\r\n    InternalError,\r\n    getLocalStack,\r\n    lock,\r\n    isText,\r\n    isNull,\r\n    isDev,\r\n    platform: {\r\n        isWindows: platform === `win32`,\r\n        isMac: platform === `darwin`\r\n    },\r\n    addReadProp,\r\n    addReadProperties,\r\n    getSafeConnection,\r\n    messageGap,\r\n    inherits,\r\n    isConnectivityError\r\n};\r\n\r\nconst mainFile = process.argv[1];\r\n\r\n// istanbul ignore next\r\nexp.startDir = mainFile ? npm.path.dirname(mainFile) : process.cwd();\r\n\r\nmodule.exports = exp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}